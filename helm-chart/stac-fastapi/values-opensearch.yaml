# Example values for deploying STAC FastAPI with OpenSearch backend
# Override the default values.yaml with these settings

# Set backend to opensearch
backend: opensearch

# STAC FastAPI application configuration
app:
  replicaCount: 2
  
  image:
    repository: ghcr.io/stac-utils/stac-fastapi
    tag: "latest"
    pullPolicy: IfNotPresent

  # Service configuration
  service:
    type: LoadBalancer
    port: 80
    targetPort: 8080

  waitForDatabase:
    enabled: true
    intervalSeconds: 2
    maxAttempts: 180

  # Ingress configuration
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: stac-api-os.example.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: stac-fastapi-os-tls
        hosts:
          - stac-api-os.example.com

  # Resource limits
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

  # Autoscaling
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80

  # Environment variables
  env:
    STAC_FASTAPI_TITLE: "Production STAC API with OpenSearch"
    STAC_FASTAPI_DESCRIPTION: "High-performance STAC API for geospatial data discovery with OpenSearch"
    ENVIRONMENT: "production"
    WEB_CONCURRENCY: "4"
    ENABLE_DIRECT_RESPONSE: "true"  # Enable for maximum performance
    DATABASE_REFRESH: "false"  # Better performance for bulk operations
    ENABLE_DATETIME_INDEX_FILTERING: "true"  # Enable for large datasets
    DATETIME_INDEX_MAX_SIZE_GB: "50"
    STAC_FASTAPI_RATE_LIMIT: "1000/minute"

  # Optional: pull connection credentials from a secret managed by the
  # OpenSearch chart (or provide plain values via username/password).
  databaseAuth:
    existingSecret: ""
    usernameKey: "username"
    passwordKey: "password"

# Enable automatic OpenSearch admin password generation
opensearchSecurity:
  generateAdminPassword: true
  # Use a deterministic name so the generated secret can be referenced below
  secretName: stac-opensearch-admin
  usernameKey: username
  passwordKey: password

# Disable Elasticsearch since we're using OpenSearch
elasticsearch:
  enabled: false

# OpenSearch configuration
opensearch:
  enabled: true
  
  # Cluster configuration
  clusterName: "stac-opensearch-prod"
  masterService: "opensearch-cluster-master"
  replicas: 3
  
  # OpenSearch roles for each node
  roles:
    - master
    - ingest
    - data
    - remote_cluster_client
  
  # Resource configuration for production
  resources:
    requests:
      cpu: "1000m"
      memory: "4Gi"
    limits:
      cpu: "2000m"
      memory: "4Gi"
  
  # JVM heap size (should be 50% of memory limit)
  opensearchJavaOpts: "-Xmx2g -Xms2g"
  
  # Production-ready OpenSearch configuration
  config:
    opensearch.yml: |
      cluster.name: stac-opensearch-prod
      network.host: 0.0.0.0
      discovery.seed_hosts: ["opensearch-cluster-master-headless"]
      cluster.initial_cluster_manager_nodes: ["stac-opensearch-prod-master-0", "stac-opensearch-prod-master-1", "stac-opensearch-prod-master-2"]
      action.destructive_requires_name: true
      indices.memory.index_buffer_size: 20%
      thread_pool.write.queue_size: 1000
      thread_pool.search.queue_size: 1000
      cluster.routing.allocation.disk.threshold_enabled: true
      cluster.routing.allocation.disk.watermark.low: 85%
      cluster.routing.allocation.disk.watermark.high: 90%
      cluster.routing.allocation.disk.watermark.flood_stage: 95%
  
  # Extra environment variables
  extraEnvs:
    - name: "DISABLE_INSTALL_DEMO_CONFIG"
      value: "false"
    - name: "DISABLE_SECURITY_PLUGIN"
      value: "false"
    - name: "OPENSEARCH_INITIAL_ADMIN_USERNAME"
      valueFrom:
        secretKeyRef:
          name: stac-opensearch-admin
          key: username
    - name: "OPENSEARCH_INITIAL_ADMIN_PASSWORD"
      valueFrom:
        secretKeyRef:
          name: stac-opensearch-admin
          key: password
  
  # Persistent storage
  persistence:
    enabled: true
    # storageClass: "fast-ssd"  # Use high-performance storage class
    accessModes:
      - ReadWriteOnce
    size: 100Gi
    annotations: {}

# External database disabled since we're using bundled OpenSearch
externalDatabase:
  enabled: false

# Monitoring configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      scrapeTimeout: 10s
      labels:
        monitoring: "prometheus"

# Pod disruption budget for high availability
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network policies for security
networkPolicy:
  enabled: true
  allowNamespaceCommunication: true
  allowDNS: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: nginx-ingress
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: opensearch
      ports:
        - protocol: TCP
          port: 9200